{"ast":null,"code":"const addRandomBomb = table => {\n  const newTable = [...table];\n  let bombCount = 0;\n  while (bombCount < 38) {\n    const randomRow = Math.floor(Math.random() * 15 + 1);\n    const randowColumn = Math.floor(Math.random() * 15 + 1);\n    if (!newTable[randomRow][randowColumn].isBomb) {\n      newTable[randomRow][randowColumn].isBomb = true;\n      bombCount++;\n    }\n  }\n  return newTable;\n};\nconst addTableNumbers = table => {\n  const newTable = [...table];\n  for (let i = 0; i < 16; i++) {\n    for (let y = 0; y < 16; y++) {\n      if (newTable[i][y].isBomb) continue;\n      if (y < newTable[i].length - 1 && newTable[i][y + 1].isBomb) {\n        newTable[i][y].number += 1;\n      }\n      if (y < newTable[i].length - 1 && i < newTable.length - 1 && newTable[i + 1][y + 1].isBomb) {\n        newTable[i][y].number += 1;\n      }\n      if (i < newTable.length - 1 && newTable[i + 1][y].isBomb) {\n        newTable[i][y].number += 1;\n      }\n      if (i < newTable.length - 1 && y > 0 && newTable[i + 1][y - 1].isBomb) {\n        newTable[i][y].number += 1;\n      }\n      if (y > 0 && newTable[i][y - 1].isBomb) {\n        newTable[i][y].number += 1;\n      }\n      if (y > 0 && i > 0 && newTable[i - 1][y - 1] && newTable[i - 1][y - 1].isBomb) {\n        newTable[i][y].number += 1;\n      }\n      if (i > 0 && newTable[i - 1][y] && newTable[i - 1][y].isBomb) {\n        newTable[i][y].number += 1;\n      }\n      if (i > 0 && y < newTable[i].length - 1 && newTable[i - 1][y + 1] && newTable[i - 1][y + 1].isBomb) {\n        newTable[i][y].number += 1;\n      }\n    }\n  }\n  return newTable;\n};\nconst getEmptyGameTable = () => {\n  const result = [];\n  for (let i = 0; i < 16; i++) {\n    const row = [];\n    for (let y = 0; y < 16; y++) {\n      row.push({\n        row: i,\n        column: y,\n        isBomb: false,\n        isOpen: false,\n        isFinished: false,\n        number: 0,\n        status: 'default'\n      });\n    }\n    result.push(row);\n  }\n  return result;\n};\nexport const generateTable = () => {\n  let result = getEmptyGameTable();\n  result = addRandomBomb(result);\n  return addTableNumbers(result);\n};\nexport const isCellBorderBomb = (cell, table) => {\n  const row = cell.row;\n  const column = cell.column;\n  let y = column;\n  while (y <= 15) {\n    if (!table[row][y].isBomb) {\n      table[row][y].isOpen = true;\n    }\n    if (table[row][y].number) {\n      table[row][y].isOpen = true;\n      break;\n    }\n    y++;\n  }\n  y = column;\n  while (y >= 0) {\n    if (!table[row][y].isBomb) {\n      table[row][y].isOpen = true;\n    }\n    if (table[row][y].number) {\n      table[row][y].isOpen = true;\n      break;\n    }\n    y--;\n  }\n  if (column < 15 && table[row][column + 1].isOpen && !table[row][column + 1].number || column > 0 && table[row][column - 1].isOpen && !table[row][column - 1].number) {\n    return false;\n  }\n  if (column < 15 && table[row][column + 1].isBomb || row < 15 && column < 15 && table[row + 1][column + 1].isBomb || row < 15 && table[row + 1][column].isBomb || row < 15 && column > 0 && table[row + 1][column - 1].isBomb || column > 0 && table[row][column - 1].isBomb || row > 0 && column > 0 && table[row - 1][column - 1].isBomb || row > 0 && table[row - 1][column].isBomb || row > 0 && column < 15 && table[row - 1][column + 1].isBomb) {\n    return true;\n  }\n  return false;\n};","map":{"version":3,"names":["addRandomBomb","table","newTable","bombCount","randomRow","Math","floor","random","randowColumn","isBomb","addTableNumbers","i","y","length","number","getEmptyGameTable","result","row","push","column","isOpen","isFinished","status","generateTable","isCellBorderBomb","cell"],"sources":["D:/saper/src/helpers/table.js"],"sourcesContent":["const addRandomBomb = (table) => {\r\n  const newTable = [...table]\r\n  \r\n  let bombCount = 0\r\n  while(bombCount < 38) {\r\n    const randomRow = Math.floor(Math.random() * 15 + 1);\r\n    const randowColumn = Math.floor(Math.random() * 15 + 1);\r\n    if(!newTable[randomRow][randowColumn].isBomb) {\r\n      newTable[randomRow][randowColumn].isBomb = true\r\n      bombCount++\r\n    }\r\n  }\r\n  \r\n  return newTable\r\n}\r\n\r\nconst addTableNumbers = (table) => {\r\n  const newTable = [...table]\r\n  for(let i = 0; i < 16; i++) {\r\n    for(let y = 0; y < 16; y++) {\r\n      if(newTable[i][y].isBomb) continue\r\n      \r\n      if(y < newTable[i].length - 1 &&  newTable[i][y + 1].isBomb) {\r\n        newTable[i][y].number += 1\r\n      }\r\n      if(y < newTable[i].length - 1 && i < newTable.length - 1 && newTable[i + 1][y + 1].isBomb) {\r\n        newTable[i][y].number += 1\r\n      }\r\n      if(i < newTable.length - 1 && newTable[i + 1][y].isBomb) {\r\n        newTable[i][y].number += 1\r\n      }\r\n      if(i < newTable.length - 1 && y > 0 && newTable[i + 1][y - 1].isBomb) {\r\n        newTable[i][y].number += 1\r\n      }\r\n      if(y > 0 && newTable[i][y - 1].isBomb) {\r\n        newTable[i][y].number += 1\r\n      }\r\n      if(y > 0 && i > 0 && newTable[i - 1][y - 1] && newTable[i - 1][y - 1].isBomb) {\r\n        newTable[i][y].number += 1\r\n      }\r\n      if(i > 0 && newTable[i - 1][y] && newTable[i - 1][y].isBomb) {\r\n        newTable[i][y].number += 1\r\n      }\r\n      if(i > 0 && y < newTable[i].length - 1 && newTable[i - 1][y + 1] && newTable[i - 1][y + 1].isBomb) {\r\n        newTable[i][y].number += 1\r\n      }\r\n    }\r\n  }\r\n  return newTable\r\n}\r\nconst getEmptyGameTable = () => {\r\n  const result = []\r\n  for(let i = 0; i < 16; i++) {\r\n    const row = []\r\n    for(let y = 0; y < 16; y++) {\r\n      row.push({\r\n        row: i,\r\n        column: y,\r\n        isBomb: false,\r\n        isOpen: false,\r\n        isFinished: false,\r\n        number: 0,\r\n        status: 'default'\r\n      })\r\n    }\r\n    result.push(row)\r\n  }\r\n  return result\r\n}\r\n\r\n\r\nexport const generateTable = () => {\r\n  let result = getEmptyGameTable()\r\n  result = addRandomBomb(result)\r\n  return addTableNumbers(result)\r\n}\r\n\r\n\r\nexport const isCellBorderBomb = (cell, table) => {\r\n  const row = cell.row\r\n  const column = cell.column\r\n  let y = column\r\n  while(y <= 15) {\r\n    if(!table[row][y].isBomb) {\r\n      table[row][y].isOpen = true\r\n    }\r\n    if(table[row][y].number) {\r\n      table[row][y].isOpen = true\r\n      break\r\n    }\r\n    y++\r\n  }\r\n  y = column\r\n  while(y >= 0) {\r\n    if(!table[row][y].isBomb) {\r\n      table[row][y].isOpen = true\r\n    }\r\n    if(table[row][y].number) {\r\n      table[row][y].isOpen = true\r\n      break\r\n    }\r\n    y--\r\n  }\r\n  if(\r\n    (column < 15 && table[row][column + 1].isOpen && !table[row][column + 1].number) ||\r\n    (column > 0 && table[row][column - 1].isOpen && !table[row][column - 1].number)\r\n    ) {\r\n    return false\r\n  }\r\n  if(\r\n    (column < 15 && table[row][column + 1].isBomb) || \r\n    (row < 15 && column < 15 && table[row + 1][column + 1].isBomb) ||\r\n    (row < 15 && table[row + 1][column].isBomb) ||\r\n    (row < 15 && column > 0 && table[row + 1][column - 1].isBomb) ||\r\n    (column > 0 && table[row][column - 1].isBomb) ||\r\n    (row > 0 && column > 0 && table[row -1][column - 1].isBomb) ||\r\n    (row > 0 && table[row - 1][column].isBomb) ||\r\n    (row > 0 && column < 15 && table[row - 1][column + 1].isBomb)\r\n  ) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}